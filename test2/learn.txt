对指针进行的文件打开操作是fopen。


引用百度百科对fopen这个函数进行介绍


函数简介
函数原型：FILE * fopen(const char * path,const char * mode);
返回值：文件顺利打开后， 指向该流的 文件指针就会被返回。如果文件打开失败则返回NULL，并把 错误代码存在 errno中。
一般而言，打开文件后会做一些文件读取或写入的动作，若打开文件失败，接下来的读写动作也无法顺利进行，
所以一般在fopen()后作错误判断及处理。

参数说明：
参数path 字符串包含欲打开的文件路径及文件名，参数mode字符串则代表着流形态。
mode有下列几种形态 字符串:
1.r 以 只读方式打开文件，该文件必须存在。
2.r+ 以可读写方式打开文件，该文件必须存在。
3.rb+ 读写打开一个 二进制文件，允许读写数据，文件必须存在。
4.w 打开只写文件，若文件存在则文件长度清为0，即该文件内容会消失。若文件不存在则建立该文件。
5.w+ 打开可读写文件，若文件存在则文件长度清为零，即该文件内容会消失。若文件不存在则建立该文件。
6.a 以附加的方式打开只写文件。若文件不存在，则会建立该文件，如果文件存在，写入的数据会被加到文件尾，
即文件原先的内容会被保留。（ EOF符保留）
7.a+ 以附加方式打开可读写的文件。若文件不存在，则会建立该文件，如果文件存在，写入的数据会被加到文件尾后，
即文件原先的内容会被保留。 （原来的EOF符不保留）
8.wb 只写打开或新建一个 二进制文件；只允许写数据。
9.wb+ 读写打开或建立一个二进制文件，允许读和写。
10.ab+ 读写打开一个二进制文件，允许读或在文件末追加数据。
11.wx 创建文本文件,只允许写入数据.[C11]
12.wbx 创建一个二进制文件,只允许写入数据.[C11]
13.w+x 创建一个文本文件,允许读写.[C11]
14.wb+x 创建一个二进制文件,允许读写.[C11]
15.w+bx 和"wb+x"相同[C11]
————————————————
版权声明：本文为CSDN博主「wzyxdwll」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/wzyxdwll/article/details/51141056